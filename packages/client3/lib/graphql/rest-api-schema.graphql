type Pool {
  id: String!
  userName: String!    
  poolName: String!
  projectDetail: String!
  goalAmount: String!
  closingDate: String!
  projectCoverImage: String
  walletAddress: String!
  terms: Terms
  termAgreement: Boolean
  status: POOL_STATUS_TYPE!
  poolAddress: String!
  borrowerContract: String!
}
enum POOL_STATUS_TYPE {
  inReview
  reviewFailed
  approved
  completed
  failed
}

type Terms {
  projectGoal: String
  raiseTarget: String
}

input PendingPoolFilters {
  statusType: [POOL_STATUS_TYPE]
  hasPoolAddress: Boolean
}

extend type Query {
  pools(walletAddress: String, filters: PendingPoolFilters): [Pool!]
  pool(poolId: String!): Pool
  poolAddress(poolAddress: String!): Pool
  poolsByIds(poolIds: [ID!]!, walletAddress: String): [Pool!]
}
